// <auto-generated />
using System;
using Bunzl.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bunzl.Infra.Data.Migrations
{
    [DbContext(typeof(BunzlContext))]
    [Migration("20241009183444_AddTableOrdemDeCompra")]
    partial class AddTableOrdemDeCompra
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bunzl.Domain.Entities.Auditoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EntidadeId")
                        .HasColumnType("uuid");

                    b.Property<string>("EntidadeNome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoAuditoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Auditoria", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("timestamptz");

                    b.Property<string>("EmpresaBunzlId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CodigoERP")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CodigoFornecedor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Contato")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFabricaAuditada")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("EstadoProvincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FabricasAuditadas")
                        .HasColumnType("text");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnType("boolean");

                    b.Property<bool>("FlagFabricaAuditadaBunzl")
                        .HasColumnType("boolean");

                    b.Property<bool>("FlagJaEhParceiroBunzl")
                        .HasColumnType("boolean");

                    b.Property<bool>("FlagVeioDoERP")
                        .HasColumnType("boolean");

                    b.Property<string>("InformacoesFabricas")
                        .HasColumnType("text");

                    b.Property<string>("InformacoesGerais")
                        .HasColumnType("text");

                    b.Property<string>("InformacoesMercados")
                        .HasColumnType("text");

                    b.Property<string>("InformacoesPoliticas")
                        .HasColumnType("text");

                    b.Property<string>("InformacoesProdutos")
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NumeroIdentificacaoFiscal")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("TelefoneArea")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("WhatsAppWechat")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("WhatsAppWechatArea")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorDadoBancario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("FornecedorId");

                    b.Property<string>("Agencia")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EstadoProvincia")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Iban")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NomeBanco")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NomeBeneficiario")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NumeroBanco")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("NumeroContaCorrente")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Swift")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.Property<string>("VatNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.HasKey("Id");

                    b.ToTable("FornecedorDadoBancario", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("FornecedorDocumento", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorObservacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("FornecedorObservacao", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("AplicacoesPrincipais")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("CBM")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("CodigoArtigo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CodigoFamiliaBunzl")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CodigoFornecedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CodigoImportador")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CodigoNCM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CodigoSku")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Composicao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Comprimento")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Cor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("CustoDesenvolvimentoEmbalagem")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("CustoRotulagemEmbalagem")
                        .HasColumnType("decimal(18,5)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescricaoArtigo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("DescricaoCompletaBunzl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DescricaoCompletaFornecedor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DescricaoImportador")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("DetalhesEmbalagem")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Familia")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Grupo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Incoterm")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Largura")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<decimal?>("PesoBruto")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("PortoEmbarque")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("QuantidadeCarregamentoContainer20Ft")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("QuantidadeCarregamentoContainer40Ft")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("QuantidadeCarregamentoContainer40Hc")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("QuantidadeMinimaPedido")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubGrupo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Tamanho")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("TempoEntrega")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("TempoPagamento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UnidadeMedidaBunzl")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("UnidadeMedidaFornecedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("FornecedorProduto", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorProdutoAnexo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FornecedorProdutoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoAnexo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorProdutoId");

                    b.ToTable("FornecedorProdutoAnexo", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CampoAtuacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TermosPagamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("NegociacaoComercial", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercialAnexo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NegociacaoComercialId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NegociacaoComercialId");

                    b.ToTable("NegociacaoComercialAnexo", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercialObservacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NegociacaoComercialId")
                        .HasColumnType("uuid");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NegociacaoComercialId");

                    b.ToTable("NegociacaoComercialObservacao", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercialProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("NegociacaoComercialId")
                        .HasColumnType("uuid");

                    b.Property<string>("Observacao")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<decimal>("PrecoSugerido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,5)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NegociacaoComercialId");

                    b.ToTable("NegociacaoComercialProduto", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssinarutaComprador")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("AssinaturaVendedor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CodigoFabricante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CodigoFornecedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Comprador")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ContatoFabricante")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ContatoImportador")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataComprador")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataVendedor")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destino")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("EmailFornecedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("EmailImportador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("EnderecoFabricante")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EnderecoFornecedor")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EnderecoImportador")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Incoterm")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ModoEntrega")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NomeFabricante")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NomeFornecedor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("NomeImportador")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Numero")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumeroContainer20Ft")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NumeroContainer40Ft")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NumeroContainer40Hc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Origem")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TempoPagamento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("TotalCBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPesoBruto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vendedor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("OrdemCompra", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompraAnexo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<Guid>("OrdemDeCompraId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeCompraId");

                    b.ToTable("OrdemCompraAnexo", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompraObservacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("OrdemDeCompraId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeCompraId");

                    b.ToTable("OrdemCompraObservacao", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompraProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoNCM")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CodigoSKU")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<decimal?>("Frete")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Moeda")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<long>("NumeroLote")
                        .HasColumnType("bigint");

                    b.Property<Guid>("OrdemDeCompraId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantidadeTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxaEmbalagem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxaInterna")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TempoEstimadoPardida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.Property<decimal>("ValorEmDolares")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeCompraId");

                    b.ToTable("OrdemCompraProduto", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.TabelaPreco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoERP")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataFimVigencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("TabelaPreco", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.TabelaPrecoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoProdutoFornecedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CodigoSku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("NovoPreco")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TabelaPrecoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UltimoPrecoPraticado")
                        .HasColumnType("decimal(18,5)");

                    b.Property<string>("UnidadeMedidaFornecedor")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TabelaPrecoId");

                    b.ToTable("TabelaPrecoProduto", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Area")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<Guid?>("ChaveCadastro")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ChaveResetSenha")
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoOtp")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataChaveResetSenha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataGeracaoCodigoOtp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataPrimeiroLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("FlagAtivo")
                        .HasColumnType("boolean");

                    b.Property<bool>("FlagVeioDoERP")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("PerfilPermissao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UsuarioAlteracao")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioCriacao")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Fornecedor_x_Empresa", b =>
                {
                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("FornecedorId");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.HasKey("FornecedorId", "EmpresaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Fornecedor_x_Empresa");
                });

            modelBuilder.Entity("Usuario_x_Empresa", b =>
                {
                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid")
                        .HasColumnName("UsuarioId");

                    b.HasKey("EmpresaId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Usuario_x_Empresa", (string)null);
                });

            modelBuilder.Entity("Usuario_x_Fornecedor", b =>
                {
                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("FornecedorId");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid")
                        .HasColumnName("UsuarioId");

                    b.HasKey("FornecedorId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Usuario_x_Fornecedor", (string)null);
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorDadoBancario", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithOne("FornecedorDadoBancario")
                        .HasForeignKey("Bunzl.Domain.Entities.FornecedorDadoBancario", "Id");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorDocumento", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("FornecedorDocumentos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorObservacao", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("FornecedorObservacoes")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorProduto", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("FornecedorProdutos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorProdutoAnexo", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.FornecedorProduto", "FornecedorProduto")
                        .WithMany("FornecedorProdutoAnexos")
                        .HasForeignKey("FornecedorProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("FornecedorProduto");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercialAnexo", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.NegociacaoComercial", "NegociacaoComercial")
                        .WithMany("Anexos")
                        .HasForeignKey("NegociacaoComercialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NegociacaoComercial");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercialObservacao", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.NegociacaoComercial", "NegociacaoComercial")
                        .WithMany("NegociacaoComercialObservacoes")
                        .HasForeignKey("NegociacaoComercialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NegociacaoComercial");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercialProduto", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.NegociacaoComercial", "NegociacaoComercial")
                        .WithMany("Produtos")
                        .HasForeignKey("NegociacaoComercialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NegociacaoComercial");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompraAnexo", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.OrdemDeCompra", "OrdemDeCompra")
                        .WithMany("Anexos")
                        .HasForeignKey("OrdemDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeCompra");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompraObservacao", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.OrdemDeCompra", "OrdemDeCompra")
                        .WithMany("Observacoes")
                        .HasForeignKey("OrdemDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeCompra");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompraProduto", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.OrdemDeCompra", "OrdemDeCompra")
                        .WithMany("Produtos")
                        .HasForeignKey("OrdemDeCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemDeCompra");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.TabelaPreco", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("TabelasPreco")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.TabelaPrecoProduto", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.TabelaPreco", "TabelaPreco")
                        .WithMany("Produtos")
                        .HasForeignKey("TabelaPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TabelaPreco");
                });

            modelBuilder.Entity("Fornecedor_x_Empresa", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bunzl.Domain.Entities.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Usuario_x_Empresa", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_x_Empresa_EmpresaId");

                    b.HasOne("Bunzl.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_x_Empresa_UsuarioId");
                });

            modelBuilder.Entity("Usuario_x_Fornecedor", b =>
                {
                    b.HasOne("Bunzl.Domain.Entities.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_x_Fornecedor_FornecedorId");

                    b.HasOne("Bunzl.Domain.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_x_Fornecedor_UsuarioId");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("FornecedorDadoBancario");

                    b.Navigation("FornecedorDocumentos");

                    b.Navigation("FornecedorObservacoes");

                    b.Navigation("FornecedorProdutos");

                    b.Navigation("TabelasPreco");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.FornecedorProduto", b =>
                {
                    b.Navigation("FornecedorProdutoAnexos");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.NegociacaoComercial", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("NegociacaoComercialObservacoes");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.OrdemDeCompra", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Observacoes");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Bunzl.Domain.Entities.TabelaPreco", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
